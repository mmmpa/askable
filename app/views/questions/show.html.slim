= stylesheet_link_tag '/css/codemirror.css', media: 'all'
section.show-question.body
  section.show-question.root
    h1.show-question.title
      i.fa.fa-fw.fa-question-circle
      = @question.title
    section.show-question.question-area
      section.show-question.question.markdown-html== @question.root.html
      - if @question.users.count != 0
        section.show-question.assigned-users
          section.show-question.not-yet-users
            h1.show-question.assigned-title
              i.fa.fa-hourglass-half
              | 反応まち
            ul.show-question.not-yet-list
              - @question.not_yet_user.map do |user|
                li.show-question.assigned-user= user.login
          section.show-question.responded-users
            h1.show-question.assigned-title
              i.fa.fa-check
              | 反応ずみ
            ul.show-question.responded-list
              - @question.responded_user.map do |user|
                li.show-question.assigned-user
                  = detect_respond_icon(user.respond_state)
                  = user.login
  div#response-to-question
  - if @question.responses.count == 0
    section.show-question.no-response
      p まだ回答はありません
  - else
    section.show-question.response-area
      ul.show-question.responses
        - @question.responses.map do |comment|
          li.show-question.response
            section.show-question.response-comment= comment.html
            footer.show-question.response-owner= comment.user.name

script src='/js/common/built.js'
script src='/js/question-responder/built.js'
javascript:
  var questionId = #{@question.id};
  var user = #{@user.to_json.html_safe};
  var team = #{@team.to_json.html_safe};
  var assigned = #{@question.users.pluck(:login).to_json.html_safe};
  QuestionResponder.start(document.querySelector('#response-to-question'), questionId, user, team, assigned);